name: ".NET"
description: "Build, test, pack, and publish a .NET repository."
author: "bottlenoselabs"

inputs:
  solution-or-project:
    description: "The target .NET solution (.sln) or C# project (.csproj)."
    required: false
    default: ''
  dotnet-sdk-version:
    description: "The version of the .NET software development kit to use."
    required: true
  is-enabled-pack:
    description: "A boolean indicating wether to run `dotnet pack` and upload NuGet packages."
    required: false
    default: 'false'
  upload-nuget-org:
    description: "Determines wether to upload to the NuGet.org feed."
    required: false
    default: 'false' #"${{ startsWith(github.ref, 'refs/tags/v') }}"
  upload-myget-org:
    description: "Determines wether to upload to the MyGet.org feed."
    required: false
    default: 'false' #"${{ github.event_name == 'push' || startsWith(github.ref, 'refs/tags/v') }}"
  myget-access-token:
    description: "The access token to upload NuGet packages to myget.org staging environment."
    required: true
  nuget-access-token:
    description: "The access token to upload NuGet packages to nuget.org release environment."
    required: true
  gitversion-working-directory:
    description: "GitVersion: Optionally supply the working directory."
    required: false
    default: '$(pwd)'
  gitversion-config-file-path:
    description: "GitVersion: Config file path."
    required: false
    default: 'GitVersion.yml'

runs:
  using: "composite"
  steps:

    - name: "Install .NET"
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '${{ inputs.dotnet-sdk-version }}'
        include-prerelease: true

    - name: "Windows"
      if: runner.os == 'Windows'
      shell: bash
      run: source ${{ github.action_path }}\dotnet.sh ${{ github.workspace }} ${{ inputs.solution-or-project }} ${{ inputs.is-enabled-pack && inputs.upload-myget-org && inputs.myget-access-token || '' }} ${{ inputs.is-enabled-pack && inputs.upload-nuget-org && inputs.nuget-access-token || '' }}

    - name: "Unix-like"
      if: runner.os != 'Windows'
      shell: bash
      run: source ${{ github.action_path }}/dotnet.sh ${{ github.workspace }} ${{ inputs.solution-or-project }} ${{ inputs.is-enabled-pack && inputs.upload-myget-org && inputs.myget-access-token || '' }} ${{ inputs.is-enabled-pack && inputs.upload-nuget-org && inputs.nuget-access-token || '' }}