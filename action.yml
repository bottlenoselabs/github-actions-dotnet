name: ".NET"
description: "Build, test, pack, and publish a .NET repository."
author: "bottlenoselabs"

inputs:
  repository:
    description: "The target repository."
    required: true
  dotnet-sdk-version:
    description: "The version of the .NET software development kit to use."
    required: true
  is-enabled-pack:
    description: "A boolean indicating wether to run `dotnet pack` and upload NuGet packages."
    required: true
  publish-environment:
    description: "The environment to use for releasing NuGet packages. 'staging' uses MyGet.org feed and 'release' uses NuGet.org feed."

runs:
  using: "composite"
  steps:

    - name: "Clone Git repository"
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        repository: '${{ inputs.repository }}'

    - name: "Git fetch all history for all tags and branches"
      run: git fetch --prune --unshallow

    - name: "Install GitVersion"
      uses: gittools/actions/gitversion/setup@v0.9.6
      env: 
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true # workaround for https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/ until the execute action is updated
      with:
        versionSpec: '5.x'
          
    - name: "Execute GitVersion"
      uses: gittools/actions/gitversion/execute@v0.9.6

    - name: "Set version"
      id: version
      shell: bash
      run: echo "VERSION=$GITVERSION_NUGETVERSIONV2" >> $GITHUB_ENV

    - name: "Install .NET"
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '${{ inputs.dotnet-sdk-version }}'
        include-prerelease: true

    - name: "Clean solution"
      run: dotnet clean --configuration Release && dotnet nuget locals all --clear

    - name: "Build solution"
      run: dotnet build --nologo --verbosity normal --configuration Release /p:Version='${{ env.VERSION }}'

    - name: "Test solution"
      run: dotnet test --nologo --verbosity normal --configuration Release --no-build

    - name: "Pack solution"
      if: inputs.pack-is-enabled == true
      run: dotnet pack --nologo --verbosity normal --configuration Release --no-build -p:PackageVersion='${{ env.VERSION }}'

    - name: "Staging"
      if: inputs.pack-is-enabled == true && inputs.publish-environment == 'staging'
      run: |
        echo "NUGET_SOURCE_URL=https://www.myget.org/F/bottlenoselabs/api/v3/index.json" >> $GITHUB_ENV
        echo "NUGET_ACCESS_TOKEN=${{ secrets.MYGET_ACCESS_TOKEN }}" >> $GITHUB_ENV

    - name: "Release"
      if: inputs.pack-is-enabled == true && inputs.publish-environment == 'release'
      run: |
        echo "NUGET_SOURCE_URL=https://api.nuget.org/v3/index.json" >> $GITHUB_ENV
        echo "NUGET_ACCESS_TOKEN=${{ secrets.MYGET_ACCESS_TOKEN }}" >> $GITHUB_ENV

    - name: "Upload Packages"
      if: inputs.pack-is-enabled == true
      run: dotnet nuget push "./**/*.nupkg" --source $NUGET_SOURCE_URL --skip-duplicate --api-key $NUGET_ACCESS_TOKEN