name: ".NET"
description: "Build, test, pack, and publish a .NET repository."
author: "bottlenoselabs"

inputs:
  solution-or-project:
    description: "The target .NET solution (.sln) or C# project (.csproj)."
    required: false
    default: ''
  dotnet-sdk-version:
    description: "The version of the .NET software development kit to use."
    required: true
  is-enabled-pack:
    description: "A boolean indicating wether to run `dotnet pack` and upload NuGet packages."
    required: false
    default: 'false'
  is-enabled-upload-myget:
    description: "Determines wether to upload to the MyGet.org feed."
    required: false
    default: 'false' #"${{ github.event_name == 'push' || startsWith(github.ref, 'refs/tags/v') }}"
  is-enabled-upload-nuget:
    description: "Determines wether to upload to the NuGet.org feed."
    required: false
    default: 'false' #"${{ startsWith(github.ref, 'refs/tags/v') }}"
  myget-access-token:
    description: "The access token to upload NuGet packages to myget.org staging environment."
    required: true
  nuget-access-token:
    description: "The access token to upload NuGet packages to nuget.org release environment."
    required: true

runs:
  using: "composite"
  steps:

    - name: "Install .NET"
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '${{ inputs.dotnet-sdk-version }}'
        include-prerelease: true

    - name: "Windows"
      if: runner.os == 'Windows'
      shell: bash
      run: |

        IS_ENABLED_UPLOAD_MYGET="${{ inputs.is-enabled-pack && inputs.is-enabled-upload-myget }}"
        if [[ "$IS_ENABLED_UPLOAD_MYGET" = "true" ]]; then
          API_KEY_MYGET="${{ inputs.myget-access-token }}"
        else
          API_KEY_MYGET=""
        fi

        IS_ENABLED_UPLOAD_NUGET="${{ inputs.is-enabled-pack && inputs.is-enabled-upload-nuget }}"
        if [[ "$IS_ENABLED_UPLOAD_NUGET" = "true" ]]; then
          API_KEY_NUGET="${{ inputs.nuget-access-token }}"
        else
          API_KEY_NUGET=""
        fi

        source "${{ github.action_path }}\dotnet.sh" "${{ github.workspace }}" "${{ inputs.solution-or-project }}" "$API_KEY_MYGET" "$API_KEY_NUGET"

    - name: "Unix-like"
      if: runner.os != 'Windows'
      shell: bash
      run: |

        IS_ENABLED_UPLOAD_MYGET="${{ inputs.is-enabled-pack && inputs.is-enabled-upload-myget }}"
        if [[ "$IS_ENABLED_UPLOAD_MYGET" = "true" ]]; then
          API_KEY_MYGET="${{ inputs.myget-access-token }}"
        else
          API_KEY_MYGET=""
        fi

        IS_ENABLED_UPLOAD_NUGET="${{ inputs.is-enabled-pack && inputs.is-enabled-upload-nuget }}"
        if [[ "$IS_ENABLED_UPLOAD_NUGET" = "true" ]]; then
          API_KEY_NUGET="${{ inputs.nuget-access-token }}"
        else
          API_KEY_NUGET=""
        fi

        source "${{ github.action_path }}/dotnet.sh" "${{ github.workspace }}" "${{ inputs.solution-or-project }}" "$API_KEY_MYGET" "$API_KEY_NUGET"